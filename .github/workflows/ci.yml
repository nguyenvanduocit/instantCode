name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install
      
    - name: Type check
      run: bunx tsc --noEmit
      
    - name: Build server
      run: bun run build
      
    - name: Build inspector toolbar
      run: bun run build:inspector
      
    - name: Test server start (quick check)
      run: |
        timeout 10s bun src/index.ts || [ $? -eq 124 ]
        echo "Server startup test completed"

  publish:
    name: Publish Package
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install
      
    - name: Build all
      run: bun run build:all
      
    - name: Create release archive
      run: |
        tar -czf instantcode-${{ github.sha }}.tar.gz \
          dist/ \
          res/ \
          package.json \
          README.md \
          CLAUDE.md
          
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: instantcode-build
        path: instantcode-${{ github.sha }}.tar.gz
        retention-days: 30

  # Job specifically for testing bunx usage
  test-bunx-usage:
    name: Test bunx Usage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Test bunx direct execution
      run: |
        echo "Testing bunx with GitHub repository..."
        # This simulates how users would run the tool
        bunx github:nguyenvanduocit/instantCode --help || echo "Help command test completed"
        
    - name: Test local bunx execution
      run: |
        bun install
        echo "Testing local bunx execution..."
        bunx . --help || echo "Local execution test completed"

  # Multi-platform compatibility test
  cross-platform:
    name: Cross Platform Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        bun-version: [latest, '1.0.0']
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: ${{ matrix.bun-version }}
        
    - name: Install dependencies
      run: bun install
      
    - name: Build and test
      run: |
        bun run build:all
        echo "Cross-platform build test completed on ${{ matrix.os }}"